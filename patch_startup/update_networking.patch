--- update_networking.sh
+++ update_networking.sh.mod
@@ -67,9 +67,14 @@
     check_httpstate
     check_smbdstate
 
-    if wifi_enabled && flag_enabled ntpWait && [ $is_booting -eq 1 ]; then
-        bootScreen Boot "Syncing time..."
-        check_ntpstate && bootScreen Boot "Time synced: $(date +"%H:%M")" || bootScreen Boot "Time sync failed"
+    if wifi_enabled && [ $is_booting -eq 1 ]; then
+        if flag_enabled ntpWait; then
+            bootScreen Boot "Syncing time..."
+            check_ntpstate && bootScreen Boot "Time synced: $(date +"%H:%M")" || bootScreen Boot "Time sync failed"
+            sleep 1
+        fi
+        bootScreen Boot "Cloud save sync in progress..."
+        check_cloudsaves && bootScreen Boot "Cloud save sync successful!" || bootScreen Boot "Cloud save sync failed!"
         sleep 1
     else
         check_ntpstate &
@@ -415,6 +420,45 @@
 # This will work but it will not export the TZ var across all opens shells so you may find the hwclock (and clock app, retroarch time etc) are correct but terminal time is not.
 # It does set TZ on the tty that Main is running in so this is ok
 
+check_ip() {
+        attempts=0
+        max_wait_ip=10
+        max_attempts=3
+        # wait for an ip address from dhcp before we start
+        while true; do
+            ip=$(ifconfig wlan0 | grep 'inet addr:' | cut -d: -f2 | cut -d' ' -f1)
+            if [ -z "$ip" ]; then
+                attempts=$((attempts + 1))
+                log "NTPwait: Waiting for IP address since $attempts seconds"
+                if [ $attempts -ge $max_wait_ip ]; then
+                    log "NTPwait: Could not acquire an IP address"
+                    got_ip=0
+                    break
+                fi
+            else
+                log "NTPwait: IP address acquired: $ip"
+                got_ip=1
+                break
+            fi
+            sleep 1
+        done
+}
+
+check_cloudsaves() {
+    ret_val=1
+    check_ip
+    if [ "$got_ip" -eq 1 ]; then
+        log "Cloudsaves: IP is available."
+        /./mnt/SDCARD/App/CloudSync/command.sh
+        ret_val=$?
+        log "Cloudsaves: rclone finished. Result: $ret_val"
+        return $ret_val
+    else
+        log "Cloudsaves: IP is unavailable."
+        return $ret_val
+    fi
+}
+
 check_ntpstate() {
     ret_val=0
     if flag_enabled ntpState && wifi_enabled && [ ! -f "$sysdir/config/.hotspotState" ]; then
@@ -428,31 +472,10 @@
             return 1
         fi
 
-        attempts=0
-        max_wait_ip=10
-        max_attempts=3
         ret_val=1
-        got_ip=0
-        # wait for an ip address from dhcp before we start
-        while true; do
-            ip=$(ifconfig wlan0 | grep 'inet addr:' | cut -d: -f2 | cut -d' ' -f1)
-            if [ -z "$ip" ]; then
-                attempts=$((attempts + 1))
-                log "NTPwait: Waiting for IP address since $attempts seconds"
-                if [ $attempts -ge $max_wait_ip ]; then
-                    log "NTPwait: Could not aquire an IP address"
-                    ret_val=1
-                    got_ip=0
-                    break
-                fi
-            else
-                log "NTPwait: IP address aquired: $ip"
-                got_ip=1
-                break
-            fi
-            sleep 1
-        done
+        check_ip
         attempts=0
+        max_attempts=3
         if [ "$got_ip" -eq 1 ]; then
             while true; do
                 log "NTPwait: get_time attempt $attempts"
